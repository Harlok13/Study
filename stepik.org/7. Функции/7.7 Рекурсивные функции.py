def fact(n):
    """
    Рекурсивная функция нахождения факториала

    Функция сначала считывает все варианты и складывает их в стек.
    пусть n принимает значение 6 т.е. она складывает n = 6, n = 5...пока n не станет 0
    после достает из стека значения и перемножает их.
    но есть один момент, обязательно должно быть указано условие выхода из рекурсии.
    В нашем случае это n * результаты рекурсии, сложенные в стек (n * fact(n-1))

    Если не указать условие выхода из рекурсии, то выкинется следующая ошибка:
    TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'

    Почему это происходит? Потому что после того, как программа складывает значения
    n с 6 до 1 в стек и n достигает значения 0, то функция должна что-то вернуть,
    поскольку рекурсия прервана из-за достижения нашего условия( if n > 0: ) , но
    ничего не вернула (return()) , потому что нет условия выхода из рекурсии, то согласно
    https://docs-python.ru : Если работа функции завершается достижением конца ее тела или
    посредством выполнения инструкции return, не содержащей выражения, то она возвращает
    значение None.

    Итак, программа сложила в стек значения 6, 5, 4, 3, 2, 1, потом n стала равна 0, в этот
    момент функция вернула None, а теперь программа должна достать значения из стека
    1, 2, 3, 4, 5, 6 и перемножить между собой. НО! Когда у нас n была равна 0, вернулся
    None -- тип данных <class 'NoneType'>. Поэтому первый множитель будет None, а программа
    выдаст ошибку: TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'
    Перемножить разные типы данных не получится.

    Соответственно нужно условие выхода из рекурсии. И здесь это условие:

    if n <= 0:
        return 1

    Если записать условие выхода return 0, то результат будет 0, потому что сколько бы значений
    n в стеке не было, первый множитель, который возвращается при достижении условия выхода из
    рекурсии будет 0, умножив на который любое число будет равно 0:



    """
    if n <= 0:
        return 0
    else:
        return n * fact(n - 1)

p = fact(6)
print(p)


"""
Предположим, что мы ищем факториал числа 5.
n = 5
fact(5) = 5 * fact(5-1) # уходит в стек (здесь программа ещё не знает чему равен fact(5-1) или fact(4))
fact(4) = 4 * fact(3) # уходит в стек
fact(3) = 3 * fact(2) # уходит в стек
fact(2) = 2 * fact(1) # уходит в стек
fact(1) = 1 * fact(0) # уходит в стек
Здесь встречается fact(0), т.е. n = 0. По условию при n <= 0 функция возвращает 1.
Таким образом fact(0) = 1
fact(1) = 1 * fact(0) = 1 * 1 = 1 # снимаем со стека (факториалу нуля (0) присвоили значение 1)
fact(2) = 2 * fact(1) = 2 * 1 = 2 # снимаем со стека (факториал 1 вычислили одной строкой выше)
fact(3) = 3 * fact(2) = 3 * 2 = 6 # снимаем со стека
fact(4) = 4 * fact(3) = 4 * 6 = 24 # снимаем со стека
fact(5) = 5 * fact(4) = 5 * 24 = 120 # снимаем со стека и стек остался пустым
"""
