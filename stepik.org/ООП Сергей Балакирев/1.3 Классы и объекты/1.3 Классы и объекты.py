"""
Концепция ООП состоит из трех главных элементов:
- Полиморфизм
- Инкапсуляция
- Наследование

           ИНКАПСУЛЯЦИЯ
В классах заложена некая идея. Они вроде капсулы, которая
содержит в себе данные и методы, которые и определяют внутренний
алгоритм функционирования данного класса:
И чтобы пользователь класса не мог случайно или намеренно вмешаться
в его внутреннюю работу, данные и методы можно скрывать. То есть,
к скрытым данным и методам нельзя напрямую обращаться извне, только
внутри класса. Такой механизм в ООП называется инкапсуляцией.
Благодаря инкапсуляции класс становится единым целым, а работа с ним
возможна только через разрешенные (публичные) свойства и методы.


           ПОЛИМОРФИЗМ
Мы можем единым образом работать с разными типами данных.
Вообще, в программировании различают два вида полиморфизма.
Это, так называемый, Ad hoc полиморфизм и параметрический
полиморфизм. Первый, Ad hoc существовал еще до появления ООП
и реализовывался через перегрузку функций и приведение различных
типов данных.

Благодаря параметрическому полиморфизму, мы можем оперировать
разными типами объектов через их единый базовый класс

Благодаря наследованию и полиморфизму мы можем на уровне ООП
описывать общую, абстрактную архитектуру работы программы в целом,
а потом, создавая дочерние классы, наполнять эту программу конкретным
содержимым, конкретным поведением


            НАСЛЕДОВАНИЕ
Наследование позволяет как бы вынести «за скобки» общее для разных классов.
Благодаря механизму наследования классов, мы можем использовать ранее
созданные классы и расширять их функциональность.


getattr(obj, name [,default]) - возвращает значение атрибута объекта
hasattr(obj, name) - проверяет на наличие атрибута name в obj
setattr(obj, name, value) - задает значение атрибута (если атрибут не существует, то он создается)
delattr(obj, name) - удаляет атрибут c именем name

ВАЖНО hasattr не укажет в каком пространстве имен находится атрибут. Т.е. Относится
 он к классу или к экземпляру класса

__doc__ - содержит строку с описанием класса
__dict__ - содержит набор атрибутов с описанием класса
Хранит локальные свойства атрибутов класса
"""
